{% comment %}
---------------------------------------------------------
Copyright Â© 2023 Section Store. All rights reserved.
Unauthorized copying, modification, distribution, or use
of this code or any portion of it, is strictly prohibited.
Violators will be prosecuted to the fullest extent of the law.
For inquiries or permissions, contact daniel@section.store
---------------------------------------------------------
{% endcomment %}

<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
/>

{%- liquid 
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign lazy = section.settings.lazy

  assign upsell_position = section.settings.upsell_position
  assign products = section.settings.products

  assign heading = section.settings.heading
  assign heading_size = section.settings.heading_size
  assign heading_size_mobile = section.settings.heading_size_mobile
  assign heading_color = section.settings.heading_color
  assign heading_custom = section.settings.heading_custom
  assign heading_font = section.settings.heading_font
  assign heading_height = section.settings.heading_height
  assign heading_align = section.settings.heading_align
  assign heading_align_mobile = section.settings.heading_align_mobile

  assign slider_view = section.settings.slider_view
  assign slider_view_mobile = section.settings.slider_view_mobile 
  assign slider_gap = section.settings.slider_gap
  assign slider_gap_mobile = section.settings.slider_gap_mobile
  assign slider_mt = section.settings.slider_mt
  assign slider_mt_mobile = section.settings.slider_mt_mobile
  
  assign item_padding_horizontal = section.settings.item_padding_horizontal
  assign item_padding_horizontal_mobile = section.settings.item_padding_horizontal_mobile
  assign item_padding_vertical = section.settings.item_padding_vertical
  assign item_padding_vertical_mobile = section.settings.item_padding_vertical_mobile
  assign item_gap = section.settings.item_gap
  assign item_gap_mobile = section.settings.item_gap_mobile
  assign item_radius = section.settings.item_radius
  assign item_border_thickness = section.settings.item_border_thickness
  assign item_border_color = section.settings.item_border_color
  assign item_border_hover_color = section.settings.item_border_hover_color
  assign item_bg_color = section.settings.item_bg_color

  assign image_width = section.settings.image_width
  assign image_width_mobile = section.settings.image_width_mobile

  assign title_custom = section.settings.title_custom
  assign title_font = section.settings.title_font
  assign title_size = section.settings.title_size
  assign title_size_mobile = section.settings.title_size_mobile
  assign title_height = section.settings.title_height
  assign title_color = section.settings.title_color

  assign use_selector = section.settings.use_selector
  assign selector_custom = section.settings.selector_custom
  assign selector_font = section.settings.selector_font
  assign selector_size = section.settings.selector_size
  assign selector_size_mobile = section.settings.selector_size_mobile
  assign selector_height = section.settings.selector_height
  assign selector_color = section.settings.selector_color
  assign selector_mt = section.settings.selector_mt
  assign selector_mt_mobile = section.settings.selector_mt_mobile
  assign selector_icon_color = section.settings.selector_icon_color
  assign selector_border_thickness = section.settings.selector_border_thickness
  assign selector_border_color = section.settings.selector_border_color
  assign selector_bg_color = section.settings.selector_bg_color
  assign selector_radius = section.settings.selector_radius

  assign button_text = section.settings.button_text
  assign button_custom = section.settings.button_custom
  assign button_font = section.settings.button_font
  assign button_size = section.settings.button_size
  assign button_size_mobile = section.settings.button_size_mobile
  assign button_height = section.settings.button_height
  assign button_color = section.settings.button_color
  assign button_underline = section.settings.button_underline

  assign button_soldout_text = section.settings.button_soldout_text

  assign arrow_size = section.settings.arrow_size
  assign arrow_size_mobile = section.settings.arrow_size_mobile
  assign arrow_icon_size = section.settings.arrow_icon_size
  assign arrow_icon_size_mobile = section.settings.arrow_icon_size_mobile
  assign arrow_color = section.settings.arrow_color
  assign arrow_hover_color = section.settings.arrow_hover_color
  assign arrow_bg_color = section.settings.arrow_bg_color
  assign arrow_bg_hover_color = section.settings.arrow_bg_hover_color
  assign arrow_radius = section.settings.arrow_radius
  assign arrow_border_thickness = section.settings.arrow_border_thickness
  assign arrow_border_color = section.settings.arrow_border_color
  assign arrow_border_hover_color = section.settings.arrow_border_hover_color
  assign arrow_show_desktop = section.settings.arrow_show_desktop
  assign arrow_show_mobile = section.settings.arrow_show_mobile
  assign arrow_hover_effect = section.settings.arrow_hover_effect
  assign arrow_use_shadow = section.settings.arrow_use_shadow
-%}

{%- style -%}
  
  {{ heading_font | font_face: font_display: 'swap' }}
  {{ title_font | font_face: font_display: 'swap' }}
  {{ selector_font | font_face: font_display: 'swap' }}
  {{ button_font | font_face: font_display: 'swap' }}

  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px !important;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px !important;
  }
  
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}px;
    padding-right: {{ padding_horizontal_mobile }}px;
    position: relative;
  }

  .upsell-heading-{{ section.id }} {
    text-align: {{ heading_align_mobile }};
  }

  .upsell-heading-{{ section.id }} * {
    margin: 0;
    font-size: {{ heading_size_mobile }}px;
    color: {{ heading_color }};
    line-height: {{ heading_height }}%;
    text-transform: unset;
  }

  .upsell-slider-wrapper-{{ section.id }} {
    position: relative;
    margin-top: {{ slider_mt_mobile }}px;
  }

  .upsell-slider-{{ section.id }} .swiper-wrapper {
    align-items: stretch !important;
  }

  .upsell-item-{{ section.id }} {
    display: flex;
    box-sizing: border-box !important;
    height: auto !important;
    padding: {{ item_padding_vertical_mobile }}px {{ item_padding_horizontal_mobile }}px;    
    border: {{ item_border_thickness }}px solid {{ item_border_color }};
    border-radius: {{ item_radius }}px;
    background-color: {{ item_bg_color }};
    overflow: hidden !important;
    gap: {{ item_gap_mobile }}px;
    cursor: pointer;
    transition: all 0.25s ease 0s;
  }

  .upsell-item-{{ section.id }}:hover {
    transition: all 0.25s ease 0s;
    border: {{ item_border_thickness }}px solid {{ item_border_hover_color }};
  }

  .upsell-item-content-{{ section.id }} {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .upsell-image-{{ section.id }} {
    text-decoration: none;
    overflow: hidden;
    transition: all 0.25s ease 0s;
    box-sizing: border-box !important;
    width: 100%;
    max-width: {{ image_width_mobile }}%;
    flex-shrink: 0;
    margin: auto 0;
  }

  .upsell-image-{{ section.id }} img,
  .upsell-image-{{ section.id }} svg {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    margin: 0;    
  }

  .upsell-item-title-{{ section.id }} {
    margin: 0;
    display: block;
    text-transform: unset;
    word-wrap: break-word;
    font-size: {{ title_size_mobile }}px;
    line-height: {{ title_height }}%;
    color: {{ title_color }};
  }

  .upsell-select-wrapper-{{ section.id }} {
    position: relative;
    margin-top: {{ selector_mt_mobile }}px;
  }

  .upsell-select-wrapper-{{ section.id }} > span {
    pointer-events: none;
    position: absolute;
    right: 0px;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    align-items: center;
    justify-content: center;
    width: 25px;
    height: 100%;
  }

  .upsell-select-wrapper-{{ section.id }} > span svg {
    stroke: unset;
    fill: {{ selector_icon_color }};
    display: block;
    width: 100%;
    height: 100%;
  }

  .upsell-select-{{ section.id }} {
    margin: 0px;
    word-wrap: break-word;
    font-size: {{ selector_size_mobile }}px;
    line-height: {{ selector_height }}%;
    color: {{ selector_color }};
    position: relative;
    cursor: pointer;
    padding: 5px 23px 5px 5px;
    width: 100%;
    appearance: none;
    outline: none;
    box-shadow: none;
    box-sizing: border-box;
    border: {{ selector_border_thickness }}px solid {{ selector_border_color }};
    border-radius: {{ selector_radius }}px;
    background: {{ selector_bg_color }};
  }

  .upsell-item-button-{{ section.id }} {    
    margin: 0;
    padding: 0;
    display: block;
    border: none;
    background: transparent;
    text-transform: unset;
    word-wrap: break-word;
    font-size: {{ button_size_mobile }}px;
    line-height: {{ button_height }}%;
    color: {{ button_color }};
    margin-top: 20px;
    cursor: pointer;
  }

  .upsell-btn-prev-{{ section.id }},
  .upsell-btn-next-{{ section.id }} {
    display: flex;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 2;
    width: {{ arrow_size_mobile }}px;
    height: {{ arrow_size_mobile }}px;
    border: 0px;
    border: {{ arrow_border_thickness }}px solid {{ arrow_border_color }};
    border-radius: {{ arrow_radius }}px;
    background: transparent;
    background: {{ arrow_bg_color }};
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease 0s;
    cursor: pointer;
    -webkit-appearance: none;
  }

  .upsell-btn-next-{{ section.id }} {
    right: 10px;
  }

  .upsell-btn-prev-{{ section.id }} {
    left: 10px;
  }

  .upsell-btn-prev-{{ section.id }} .animate-icon,
  .upsell-btn-next-{{ section.id }} .animate-icon {
    pointer-events: none;
    place-items: center;
    display: grid;
  }

  .upsell-btn-prev-{{ section.id }} .animate-icon:before,
  .upsell-btn-next-{{ section.id }} .animate-icon:before {
    content: "";
    grid-area: 1 / -1;
    transition: all .2s ease;
    width: {{ arrow_icon_size_mobile }}px;
    height: {{ arrow_icon_size_mobile }}px;
    transform: rotate(calc(1 * 45deg));
    box-sizing: border-box;
    border-style: solid;
    border: 0px;
    border-right: 2px solid currentColor;
    border-top: 2px solid currentColor;
    position: relative;
    left: -1px;
  }

  .upsell-btn-prev-{{ section.id }} .animate-icon:before {
    left: unset;
    right: -1px;
    border-right: 0px;
    border-top: 0px;
    border-bottom: 2px solid currentColor;
    border-left: 2px solid currentColor;
  }

  .upsell-btn-prev-{{ section.id }} .animate-icon:after,
  .upsell-btn-next-{{ section.id }} .animate-icon:after {
    content: "";
    grid-area: 1 / -1;
    transition: all .2s ease;
    width: {{ arrow_icon_size_mobile | minus: 0.3 }}px;
    height: 1.6px;
    transform-origin: center;
    opacity: 0;
    background: currentColor;
    transform: scaleX(.5);
  }

  .upsell-btn-prev-{{ section.id }} span,
  .upsell-btn-next-{{ section.id }} span {
    color: {{ arrow_color }};
  }

  .upsell-btn-prev-{{ section.id }}.swiper-button-disabled,
  .upsell-btn-next-{{ section.id }}.swiper-button-disabled {
    opacity: 0;
  }

  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px !important;
      margin-bottom: {{ margin_bottom }}px !important;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}px;
      padding-right: {{ padding_horizontal }}px;
    }

    .upsell-heading-{{ section.id }} {
      text-align: {{ heading_align }};
    }

    .upsell-heading-{{ section.id }} * {
      font-size: {{ heading_size }}px;
    }

    .upsell-slider-wrapper-{{ section.id }} {
      margin-top: {{ slider_mt }}px;
    }

    .upsell-item-{{ section.id }} {
      gap: {{ item_gap }}px;
      padding: {{ item_padding_vertical }}px {{ item_padding_horizontal }}px;
    }

    .upsell-image-{{ section.id }} {
      max-width: {{ image_width }}%;
    }

    .upsell-item-title-{{ section.id }} {
      font-size: {{ title_size }}px;
    }

    .upsell-select-wrapper-{{ section.id }} {
      margin-top: {{ selector_mt }}px;
    }

    .upsell-select-{{ section.id }} {
      font-size: {{ selector_size }}px;
    }

    .upsell-item-button-{{ section.id }} {
      font-size: {{ button_size }}px;
    }

    .upsell-btn-prev-{{ section.id }},
    .upsell-btn-next-{{ section.id }} {
      width: {{ arrow_size }}px;
      height: {{ arrow_size }}px;
      transition: all 0.25s ease 0s;
      opacity: 0;
    }

    .upsell-btn-prev-{{ section.id }} .icon:before,
    .upsell-btn-next-{{ section.id }} .icon:before {
      width: {{ arrow_icon_size }}px;
      height: {{ arrow_icon_size }}px;
    }

    .upsell-btn-prev-{{ section.id }} .animate-icon:after,
    .upsell-btn-next-{{ section.id }} .animate-icon:after {
      width: {{ arrow_icon_size | minus: 0.3 }}px;
    }

    .upsell-slider-wrapper-{{ section.id }}:hover .upsell-btn-prev-{{ section.id }},
    .upsell-slider-wrapper-{{ section.id }}:hover .upsell-btn-next-{{ section.id }} {
      opacity: 1;
      transition: all 0.25s ease 0s;
    }
  
    .upsell-slider-wrapper-{{ section.id }}:hover .upsell-btn-prev-{{ section.id }}.swiper-button-disabled,
    .upsell-slider-wrapper-{{ section.id }}:hover .upsell-btn-next-{{ section.id }}.swiper-button-disabled {
      opacity: 0;
      transition: all 0.25s ease 0s;
    }
  }
  
{%- endstyle -%}

{% if heading_custom %}
  <style>
    .upsell-heading-{{ section.id }} * {
      font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
      font-weight: {{ heading_font.weight }};
      font-style: {{ heading_font.style }};
    }
  </style>
{% endif %}

{% if title_custom %}
  <style>
    .upsell-item-title-{{ section.id }} {
      font-family: {{ title_font.family }}, {{ title_font.fallback_families }};
      font-weight: {{ title_font.weight }};
      font-style: {{ title_font.style }};
    }
  </style>
{% endif %}

{% if selector_custom %}
  <style>
    .upsell-select-{{ section.id }} {
      font-family: {{ selector_font.family }}, {{ selector_font.fallback_families }};
      font-weight: {{ selector_font.weight }};
      font-style: {{ selector_font.style }};
    }
  </style>
{% endif %}

{% if button_custom %}
  <style>
    .upsell-item-button-{{ section.id }} {
      font-family: {{ button_font.family }}, {{ button_font.fallback_families }};
      font-weight: {{ button_font.weight }};
      font-style: {{ button_font.style }};
    }
  </style>
{% endif %}

{% if arrow_hover_effect == "color" %}
  <style>
    .upsell-btn-prev-{{ section.id }}:hover,
    .upsell-btn-next-{{ section.id }}:hover {
      transition: all 0.3s ease 0s;
      border: {{ arrow_border_thickness }}px solid {{ arrow_border_hover_color }};
      background: {{ arrow_bg_hover_color }};
    }
  
    .upsell-btn-prev-{{ section.id }}:hover .animate-icon,
    .upsell-btn-next-{{ section.id }}:hover .animate-icon {
      color: {{ arrow_hover_color }};
    }
  </style>
{% elsif arrow_hover_effect == "scale" %}
  <style>
    .upsell-btn-prev-{{ section.id }}:hover,
    .upsell-btn-next-{{ section.id }}:hover {
      transform: scale(0.9) translateY(-50%);
    }

    @media(min-width: 1024px) {
      .upsell-btn-prev-{{ section.id }}:hover,
      .upsell-btn-next-{{ section.id }}:hover {
        transform: scale(0.9) translateY(-50%);
      }
    }
  </style>
{% elsif arrow_hover_effect == "arrow" %}
  <style>
    .upsell-btn-next-{{ section.id }}:hover .animate-icon:before {
      transform: translate(calc(1 * 0.125rem)) rotate(calc(1 * 45deg));
    }
  
    .upsell-btn-prev-{{ section.id }}:hover .animate-icon:before {
      transform: translate(calc(-1 * 0.125rem)) rotate(calc(1 * 45deg));
    }
    
    .upsell-btn-prev-{{ section.id }}:hover .animate-icon:after,
    .upsell-btn-next-{{ section.id }}:hover .animate-icon:after {
      opacity: 1;
      transform: scaleX(1);
    }
  </style>
{% endif %}

{% if arrow_show_mobile %}
  <style>
    .upsell-btn-next-{{ section.id }},
    .upsell-btn-prev-{{ section.id }} {
      display: block;
    }
  </style>
{% else %}
  <style>
    .upsell-btn-next-{{ section.id }},
    .upsell-btn-prev-{{ section.id }} {
      display: none;
    }
  </style>
{% endif %}

{% if arrow_show_desktop %}
  <style>
    @media(min-width: 1024px) {
      .upsell-btn-next-{{ section.id }},
      .upsell-btn-prev-{{ section.id }} {
        display: block;
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
      .upsell-btn-next-{{ section.id }},
      .upsell-btn-prev-{{ section.id }} {
        display: none;
      }
    }
  </style>
{% endif %}

{% if arrow_use_shadow %}
  <style>
    .upsell-btn-next-{{ section.id }},
    .upsell-btn-prev-{{ section.id }} {
      box-shadow: 0 4px 16px 4px #4a4a4a1a
    }
  </style>
{% endif %}

{% if button_underline %}
  <style>
    .upsell-item-button-{{ section.id }} {
      position: relative;
      max-width: fit-content;
    }

    .upsell-item-button-{{ section.id }}::after {
      content: '';
      position: absolute;
      left: 0;
      bottom: -3px;
      height: 1px;
      width: 100%;
      background-color: {{ button_color }};
    }
  </style>
{% endif %}  

{% comment %} PREVIEW {% endcomment %}
<style>
  .upsell-slider-{{ section.id }}.preview .swiper-wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    overflow: hidden;
  }

  .upsell-slider-{{ section.id }}.preview .upsell-item-{{ section.id }} {
    width: 100%;
  }

  .upsell-slider-{{ section.id }}.preview .upsell-item-{{ section.id }}:not(:last-child) {
    margin-right: {{ slider_gap_mobile }}px;
  } 

  @media(min-width: 1024px) {
    .upsell-slider-{{ section.id }}.preview .upsell-item-{{ section.id }}:not(:last-child) {
      margin-right: {{ slider_gap }}px;
    } 

    .upsell-slider-{{ section.id }}.preview .upsell-item-{{ section.id }} {
      width: calc((100% / {{ slider_view }}) - {{ slider_gap }}px);
    }
  }
</style>

<script>
  (function () {
    function moreLoadProductForm() {
      var upsellForm = document.querySelector('#ss-upsell-products');
      if (!upsellForm){
        var upsellForm = document.querySelector('{% if upsell_position == "below_title" or upsell_position == "above_title" %}.product__title{% elsif upsell_position == "below_description" or upsell_position == "above_description" %}.product__description{% elsif upsell_position == "below_price" %}.price.price--large.price--show-badge{% else %}.button--add-to-cart, .product .product-form, .product-single__add-to-cart, .shopify-payment-button, .shopify-payment-button__button, .ProductForm__BuyButtons, .add-to-cart{% endif %}');
        if (!upsellForm) return;
        }
        const templateContent = document.querySelector(
          '#ss-upsell-products-{{ section.id }}'
        ).content;

        upsellForm.insertAdjacentElement(
        '{% if upsell_position == "below_buy" or upsell_position == "below_title" or upsell_position == "below_description" or upsell_position == "below_price" %}afterend{% else %}beforebegin{% endif %}',
          templateContent.firstElementChild
        );      
    }
    window.addEventListener('DOMContentLoaded', moreLoadProductForm);
  })();
</script>

{% if products != blank %} 
  
<template id="ss-upsell-products-{{ section.id }}">
  <div class="section-{{ section.id }} upsell-{{ section.id }}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
    <div class="section-{{ section.id }}-settings">
      {% if heading != blank %}
        <div class="upsell-heading-{{ section.id }}">
          {{ heading }}
        </div>
      {% endif %}
      <div class="upsell-slider-wrapper-{{ section.id }}">
        <button class="upsell-btn-prev-{{ section.id }}">
          <span class="animate-icon"></span>
        </button>
        <button class="upsell-btn-next-{{ section.id }}">
          <span class="animate-icon"></span>
        </button> 
        <div class="upsell-slider-{{ section.id }} preview swiper">
          <div class="swiper-wrapper">
            {% for product in products %}
              <div class="upsell-item-{{ section.id }} swiper-slide">
                <div class="upsell-image-{{ section.id }}">
                  {% if product.featured_image != blank %}
                    <img src="{{ product.featured_image | image_url }}" alt="{{ product.featured_image.alt }}" {% if lazy %}loading="lazy"{% endif %}>
                  {% else %}
                    {{ 'image' | placeholder_svg_tag }}
                  {% endif %}
                </div>              
                <div class="upsell-item-content-{{ section.id }}">
                  <p class="upsell-item-title-{{ section.id }}">
                    {% if product != blank %} 
                      {{ product.title }}
                    {% else %}
                      Product title  
                    {% endif %}                  
                  </p>
                  {% if use_selector and product.variants.size > 1 %}
                    <div class="upsell-select-wrapper-{{ section.id }}">
                      <select class="upsell-select-{{ section.id }}">
                        {%- for variant in product.variants -%}
                            <option value="{{ variant.id }}">{{ variant.title }}</option>
                        {% endfor %}
                      </select>
                      <span>
                        <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" enable-background="new 0 0 100 100" height="512" viewBox="0 0 100 100" width="512"><g><path d="m67.41 45.41-2.82-2.82-14.59 14.58-14.59-14.58-2.82 2.82 17.41 17.42z"/></g></svg>  
                      </span>
                    </div>
                  {% endif %}
                  <div class="upsell-item-form-{{ section.id }}">
                    {%- form 'product',  product, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                      <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" disabled class="product-variant-id">
                      <input type="hidden" value="{{ product.selected_or_first_available_variant.id }}" name="items[0][id]" class="product-other-variant-id">
                      <input class="quantity" type="hidden" name="items[0][quantity]" value="1">
                      <button
                        id="ProductSubmitButton-{{ section.id }}"
                        type="submit"
                        name="add"
                        class="upsell-item-button-{{ section.id }}"
                        {% if product.selected_or_first_available_variant.available == false %}
                          disabled
                        {% endif %}
                      >
                        <span>
                          {%- if product.selected_or_first_available_variant.available == false -%}
                            {{ button_soldout_text }}
                          {%- else -%}
                            {{ button_text }} {{ product.price | money }}
                          {%- endif -%}
                        </span>
                      </button>
                    {%- endform -%}             
                  </div>
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>
  </div>
</template>
                          
{% endif %}

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script>
  const formatMoneyForBuyWith = function(cents, format) {
    if (typeof cents === 'string') { 
        cents = cents.replace('.',''); 
    }
    let value = '';
    const placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
    const formatString = format || this.money_format;
  
    function defaultOption(opt, def) {
       return (typeof opt === 'undefined' ? def : opt);
    }
  
    function formatWithDelimiters(number, precision, thousands, decimal) {
      precision = defaultOption(precision, 2);
      thousands = defaultOption(thousands, ',');
      decimal = defaultOption(decimal, '.');
  
      if (isNaN(number) || number == null) { return 0; }
  
      number = (number/100.0).toFixed(precision);
  
      const parts = number.split('.');
      const dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands);
      const cents = parts[1] ? (decimal + parts[1]) : '';
  
      return dollars + cents;
    }
  
    const match = formatString.match(placeholderRegex);
    if (!match) return formatString;

    switch(match[1]) {
      case 'amount':
        value = formatWithDelimiters(cents, 2);
        break;
      case 'amount_no_decimals':
        value = formatWithDelimiters(cents, 0);
        break;
      case 'amount_with_comma_separator':
        value = formatWithDelimiters(cents, 2, '.', ',');
        break;
      case 'amount_no_decimals_with_comma_separator':
        value = formatWithDelimiters(cents, 0, '.', ',');
        break;
    }
  
    return formatString.replace(placeholderRegex, value);
};
  
function initUpsell5() {
    setTimeout(() => {
        const sectionId = '{{ section.id }}';
        const sliderGapMobile = {{ slider_gap_mobile }};
        const sliderViewMobile = {{ slider_view_mobile }};
        const sliderGap = {{ slider_gap }};
        const sliderView = {{ slider_view }};
        const buttonText = '{{ button_text }}';
        const buttonSoldOutText = '{{ button_soldout_text }}';
        const shopMoneyFormat = '{{ shop.money_format }}';

        document.querySelector(`.upsell-slider-${sectionId}`).classList.remove('preview');
        
        const slider = new Swiper(`.upsell-slider-${sectionId}`, {          
            speed: 300,  
            navigation: {
                nextEl: `.upsell-btn-next-${sectionId}`,
                prevEl: `.upsell-btn-prev-${sectionId}`,
            },
            breakpoints: {
                320: {
                    spaceBetween: sliderGapMobile,
                    slidesPerView: sliderViewMobile
                },
                768: {
                    slidesPerView: sliderView
                },
                1024: {
                    spaceBetween: sliderGap,
                    slidesPerView: sliderView
                }
            },
        });

        const selectors = document.querySelectorAll(`.upsell-select-${sectionId}`);
        const buttons = document.querySelectorAll(`.upsell-item-button-${sectionId}`);
        const forms = document.querySelectorAll(`.upsell-item-form-${sectionId} form`);
      
        {% if products != blank %}
            {% for product in products %}
                const product{{ forloop.index0 }} = {{ product | json }};
                const select{{ forloop.index0 }} = selectors[{{ forloop.index0 }}];
                const form{{ forloop.index0 }} = forms[{{ forloop.index0 }}];
                const button{{ forloop.index0 }} = buttons[{{ forloop.index0 }}];

                if (select{{ forloop.index0 }}) {
                    select{{ forloop.index0 }}.addEventListener('change', () => {
                        const selectedOptionId = select{{ forloop.index0 }}.value;

                        if (form{{ forloop.index0 }}) {
                            const input = form{{ forloop.index0 }}.querySelector('.product-variant-id');
                            const otherInput = form{{ forloop.index0 }}.querySelector('.product-other-variant-id');

                            if (input) {
                                input.value = selectedOptionId;
                            }

                            if (otherInput) {
                                otherInput.value = selectedOptionId;
                            }
                        }
                        
                        const matchedVariant = product{{ forloop.index0 }}.variants.find(
                            variant => variant.id == selectedOptionId
                        );

                        if (button{{ forloop.index0 }}) {
                            if (matchedVariant.available) {
                                button{{ forloop.index0 }}.removeAttribute('disabled');
                                button{{ forloop.index0 }}.innerHTML = 
                                    `${buttonText} ${formatMoneyForBuyWith(matchedVariant.price, shopMoneyFormat)}`;
                            } else {
                                button{{ forloop.index0 }}.setAttribute('disabled', true);
                                button{{ forloop.index0 }}.innerHTML = 
                                    `${buttonSoldOutText} ${formatMoneyForBuyWith(matchedVariant.price, shopMoneyFormat)}`;
                            }
                        }
                    });
                }
            {% endfor %}
        {% endif %}
    }, 400);
}
  
document.addEventListener('DOMContentLoaded', initUpsell5);
  
if (Shopify.designMode) {
    document.addEventListener('shopify:section:unload', initUpsell5);
    document.addEventListener('shopify:section:load', initUpsell5);
}
</script>

{% schema %}
  {
    "name": "SS - Upsell #4",
    "settings": [
      {
        "type": "header",
        "content": "â ï¸ Save settings to view updates",
        "info":"Learn how to add snippet sections with [this tutorial](https://section-store.helpscoutdocs.com/article/10-adding-product-page-snippets)"
      },
      {
        "type": "paragraph",
        "content": "Learn how to include dynamic content per product with [this tutorial](https://section-store.helpscoutdocs.com/article/17-dynamic-content-settings-per-product)"
      },
      {
        "type": "header",
        "content": "Custom placement",
        "info": "Copy this code: <div id='ss-upsell-products'></div> - Click 'Add block' -> Custom Liquid/HTML -> Paste."
      },
      {
        "type": "select",
        "id": "upsell_position",
        "label": "Position",
        "default": "below_buy",
        "options": [
          {
            "label": "Above buy buttons",
            "value": "above_buy"
          },
          {
            "label": "Below buy buttons",
            "value": "below_buy"
          },
          {
            "label": "Above product title",
            "value": "above_title"
          },
          {
            "label": "Below product title",
            "value": "below_title"
          },
          {
            "label": "Above product description",
            "value": "above_description"
          },
          {
            "label": "Below product description",
            "value": "below_description"
          }
        ]
      },
      {
        "type": "product_list",
        "id": "products",
        "label": "Products"
      },
      {
        "type": "header",
        "content": "Heading settings"
      },
      {
        "type": "richtext",
        "id": "heading",
        "label": "Text",
        "default": "<h3>Works well with</h3>"
      },
      {
        "type": "checkbox",
        "id": "heading_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "heading_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "heading_size",
        "min": 0,
        "max": 72,
        "step": 1,
        "unit": "px",
        "label": "Font size",
        "default": 15
      },
      {
        "type": "range",
        "id": "heading_size_mobile",
        "min": 0,
        "max": 72,
        "step": 1,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 15
      },
      {
        "type": "range",
        "id": "heading_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 130
      },
      {
        "type": "text_alignment",
        "id": "heading_align",
        "label": "Alignment"
      },
      {
        "type": "text_alignment",
        "id": "heading_align_mobile",
        "label": "Alignment - mobile"
      },
      {
        "type": "header",
        "content": "Slider settings"
      },
      {
        "type": "range",
        "id": "slider_view",
        "min": 1,
        "max": 3,
        "step": 0.1,
        "label": "Products per view",
        "default": 1.6
      },      
      {
        "type": "range",
        "id": "slider_view_mobile",
        "min": 1,
        "max": 2,
        "step": 0.1,
        "label": "Products per view - mobile",
        "default": 1.3
      }, 
      {
        "type": "range",
        "id": "slider_gap",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Gap",
        "default": 16
      },
      {
        "type": "range",
        "id": "slider_gap_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Gap - mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "slider_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top",
        "default": 16
      },
      {
        "type": "range",
        "id": "slider_mt_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top - mobile",
        "default": 16
      },  
      {
        "type": "header",
        "content": "Product settings"
      },
      {
        "type": "range",
        "id": "item_padding_horizontal",
        "min": 0,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Padding horizontal",
        "default": 12
      },
      {
        "type": "range",
        "id": "item_padding_horizontal_mobile",
        "min": 0,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Padding horizontal - mobile",
        "default": 12
      },  
      {
        "type": "range",
        "id": "item_padding_vertical",
        "min": 0,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Padding vertical",
        "default": 12
      },
      {
        "type": "range",
        "id": "item_padding_vertical_mobile",
        "min": 0,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Padding vertical - mobile",
        "default": 12
      }, 
      {
        "type": "range",
        "id": "item_gap",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Gap",
        "default": 10
      },
      {
        "type": "range",
        "id": "item_gap_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Gap - mobile",
        "default": 10
      }, 
      {
        "type": "range",
        "id": "item_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Roundness",
        "default": 0
      },  
      {
        "type": "range",
        "id": "item_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 1
      },
      {
        "type": "header",
        "content": "Product image settings"
      },
      {
        "type": "range",
        "id": "image_width",
        "min": 20,
        "max": 50,
        "step": 2,
        "unit": "%",
        "label": "Width",
        "default": 40
      },
      {
        "type": "range",
        "id": "image_width_mobile",
        "min": 20,
        "max": 50,
        "step": 2,
        "unit": "%",
        "label": "Width - mobile",
        "default": 40
      },
      {
        "type": "header",
        "content": "Product title settings"
      },
      {
        "type": "checkbox",
        "id": "title_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "title_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "title_size",
        "min": 0,
        "max": 48,
        "step": 1,
        "unit": "px",
        "label": "Font size",
        "default": 12
      },
      {
        "type": "range",
        "id": "title_size_mobile",
        "min": 0,
        "max": 48,
        "step": 1,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 12
      },    
      {
        "type": "range",
        "id": "title_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 150
      }, 
      {
        "type": "header",
        "content": "Variant selector settings"
      },
      {
        "type": "checkbox",
        "id": "use_selector",
        "label": "Use variant selector",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "selector_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "selector_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "selector_size",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size",
        "default": 12
      },
      {
        "type": "range",
        "id": "selector_size_mobile",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 12
      },    
      {
        "type": "range",
        "id": "selector_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 150
      }, 
      {
        "type": "range",
        "id": "selector_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Roundness",
        "default": 0
      },  
      {
        "type": "range",
        "id": "selector_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 1
      },
      {
        "type": "range",
        "id": "selector_mt",
        "min": 0,
        "max": 40,
        "step": 2,
        "unit": "px",
        "label": "Margin top",
        "default": 12
      },
      {
        "type": "range",
        "id": "selector_mt_mobile",
        "min": 0,
        "max": 40,
        "step": 2,
        "unit": "px",
        "label": "Margin top - mobile",
        "default": 12
      },  
      {
        "type": "header",
        "content": "Product button settings"
      },  
      {
        "type": "text",
        "id": "button_text",
        "label": "Add text",
        "default": "Add"
      },
      {
        "type": "text",
        "id": "button_soldout_text",
        "label": "Sold-out text",
        "default": "Sold out"
      },
      {
        "type": "checkbox",
        "id": "button_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "button_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "button_size",
        "min": 0,
        "max": 48,
        "step": 1,
        "unit": "px",
        "label": "Font size",
        "default": 13
      },
      {
        "type": "range",
        "id": "button_size_mobile",
        "min": 0,
        "max": 48,
        "step": 1,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 13
      },    
      {
        "type": "range",
        "id": "button_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 100
      },  
      {
        "type": "checkbox",
        "id": "button_underline",
        "label": "Use underline",
        "default": true
      },
      {
        "type": "header",
        "content": "Arrow settings"
      },
      {
        "type": "range",
        "id": "arrow_size",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Size",
        "default": 40
      },
      {
        "type": "range",
        "id": "arrow_size_mobile",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Size - mobile",
        "default": 40
      },
      {
        "type": "range",
        "id": "arrow_icon_size",
        "min": 5,
        "max": 15,
        "step": 1,
        "unit": "px",
        "label": "Icon size",
        "default": 8
      },
      {
        "type": "range",
        "id": "arrow_icon_size_mobile",
        "min": 5,
        "max": 15,
        "step": 1,
        "unit": "px",
        "label": "Icon size - mobile",
        "default": 8
      },
      {
        "type": "range",
        "id": "arrow_border_thickness",
        "min": 0,
        "max": 10,
        "step": 0.5,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "range",
        "id": "arrow_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Roundness",
        "default": 100
      },
      {
        "type": "select",
        "id": "arrow_hover_effect",
        "label": "Hover effect",
        "default": "color",
        "options": [
          {
            "label": "Change color",
            "value": "color"
          },
          {
            "label": "Change size",
            "value": "scale"
          },
          {
            "label": "Change arrow",
            "value": "arrow"
          },
          {
            "label": "None",
            "value": "none"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "arrow_show_desktop",
        "label": "Show on desktop",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "arrow_show_mobile",
        "label": "Show on mobile",
        "default": false
      }, 
      {
        "type": "checkbox",
        "id": "arrow_use_shadow",
        "label": "Use shadow arrow",
        "default": true
      },            
      {
        "type": "header",
        "content": "Product colors"
      },
      {
        "type": "color",
        "id": "title_color",
        "label": "Title",
        "default": "#000000"
      },
      {
        "type": "color",
        "id": "button_color",
        "label": "Price",
        "default": "#000000"
      },
      {
        "type": "color",        
        "id": "item_bg_color",
        "label": "Background",
        "default": "#FFFFFF"
      },      
      {
        "type": "color",        
        "id": "item_border_color",
        "label": "Border",
        "default": "#EFEFEF"
      },
      {
        "type": "color",        
        "id": "item_border_hover_color",
        "label": "Border hover",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Variant selector colors"
      },  
      {
        "type": "color",
        "label": "Text",
        "id": "selector_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Icon",
        "id": "selector_icon_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Background",
        "id": "selector_bg_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "selector_border_color",
        "default": "#EFEFEF"
      },
      {
        "type": "header",
        "content": "Arrow colors"
      },
      {
        "type": "color",
        "label": "Icon",
        "id": "arrow_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Icon hover",
        "id": "arrow_hover_color",
        "default": "#7B7B7B"
      },
      {
        "type": "color",
        "label": "Background",
        "id": "arrow_bg_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Background hover",
        "id": "arrow_bg_hover_color",
        "default": "#F5F5F5"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "arrow_border_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Border hover",
        "id": "arrow_border_hover_color",
        "default": "#7B7B7B"
      },
      {
        "type": "header",
        "content": "Section colors"
      },
      {
        "type": "color",        
        "id": "heading_color",
        "label": "Heading",
        "default": "#000000"
      },    
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": -20,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 20
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": -20,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 20
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 0
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 4,
         "unit": "px",
         "label": "Padding bottom",
         "default": 0
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Padding sides",
        "default": 0
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "px",
        "label": "Padding sides mobile",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section settings"
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "lazy",
        "label": "Lazy load",
        "info": "Lazy load images for speed optimisation",
        "default": true
      }
    ],
    "presets": [
      {
        "name": "SS - Upsell #4"
      }
    ]
  }
{% endschema %}

