{% comment %}
  ---------------------------------------------------------
  Copyright Â© 2023 Section Store. All rights reserved.
  Unauthorized copying, modification, distribution, or use
  of this code or any portion of it, is strictly prohibited.
  Violators will be prosecuted to the fullest extent of the law.
  For inquiries or permissions, contact daniel@section.store
  ---------------------------------------------------------
{% endcomment %}

{%- liquid
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign margin_horizontal_mobile = section.settings.margin_horizontal_mobile
  assign margin_horizontal = section.settings.margin_horizontal
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width

  assign body_gap_mobile = section.settings.body_gap_mobile
  assign body_gap = section.settings.body_gap
  assign body_radius = section.settings.body_radius

  assign faq_position = section.settings.faq_position
  assign faq_position_mobile = section.settings.faq_position_mobile

  assign item_padding_vertical_mobile = section.settings.item_padding_vertical_mobile
  assign item_padding_vertical = section.settings.item_padding_vertical
  assign item_padding_horizontal_mobile = section.settings.item_padding_horizontal_mobile
  assign item_padding_horizontal = section.settings.item_padding_horizontal
  assign item_radius = section.settings.item_radius
  assign item_border_thickness = section.settings.item_border_thickness
  assign item_border_color = section.settings.item_border_color
  assign item_shadow = section.settings.item_shadow
  assign item_bg_color = section.settings.item_bg_color
  assign item_mt = section.settings.item_mt

  assign question_size = section.settings.question_size
  assign question_size_mobile = section.settings.question_size_mobile
  assign question_color = section.settings.question_color
  assign question_custom = section.settings.question_custom
  assign question_font = section.settings.question_font
  assign question_height = section.settings.question_height

  assign arrow_color = section.settings.arrow_color
  assign arrow_size = section.settings.arrow_size
  assign arrow_size_mobile = section.settings.arrow_size_mobile
  assign arrow_border_thickness = section.settings.arrow_border_thickness
  assign arrow_border_color = section.settings.arrow_border_color

  assign answer_size = section.settings.answer_size
  assign answer_size_mobile = section.settings.answer_size_mobile
  assign answer_color = section.settings.answer_color
  assign answer_custom = section.settings.answer_custom
  assign answer_font = section.settings.answer_font
  assign answer_height = section.settings.answer_height
  assign answer_padding_top = section.settings.answer_padding_top
-%}

{%- style -%}
  {{  question_font | font_face: font_display: 'swap' }}
  {{  answer_font | font_face: font_display: 'swap' }}

  .section-{{ section.id }} {
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
    margin-left: {{ margin_horizontal_mobile }}rem;
    margin-right: {{ margin_horizontal_mobile }}rem;
    border-radius: {{ body_radius }}px;
    border: {{ border_thickness }}px solid {{ border_color }};
    overflow: hidden;
  }

  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }

  .faq-body-{{ section.id }} {
    display: grid;
    gap: {{ body_gap_mobile }}px;
  }

  .faq-item-{{ section.id }} {
    padding: {{ item_padding_vertical_mobile }}px {{ item_padding_horizontal_mobile }}px;
    border-radius: {{ item_radius }}px;
    border: {{ item_border_thickness }}px solid {{ item_border_color }};
    background-color: {{ item_bg_color }};
  }

  .faq-item-{{ section.id }}:not(:first-child) {
    margin-top: {{ item_mt | times: 0.75 | round: 0 }}px;
  }

  .faq-toggle-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    gap: 12px;
  }

  .faq-arrow-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 0 0 {{ arrow_size_mobile }}px;
    height: {{ arrow_size_mobile }}px;
    transition: all 0.3s ease 0s;
    transform: rotate(var(--rotate));
    border-radius: 50%;
    border: {{ arrow_border_thickness }}px solid {{ arrow_border_color }};
  }

  .faq-arrow-{{ section.id }} svg {
    width: {{ arrow_size_mobile | times: 0.5 | round: 0 }}px;
    height: {{ arrow_size_mobile | times: 0.5 | round: 0 }}px;
  }

  .faq-arrow-{{ section.id }} svg path {
    fill: {{ arrow_color }};
  }

  .faq-question-{{ section.id }} {
    margin: 0px;
    font-size: {{ question_size_mobile }}px;
    color: {{ question_color }};
    line-height: {{ question_height }}%;
    text-transform: unset;
    font-weight: 700;
  }

  .faq-answer-{{ section.id }} {
    transition: all 0.2s ease-in-out;
    overflow: hidden;
  }

  .faq-answer-{{ section.id }} * {
    margin: 0px;
    font-size: {{ answer_size_mobile }}px;
    color: {{ answer_color }};
    line-height: {{ answer_height }}%;
    text-transform: unset;
  }

  .faq-answer-{{ section.id }} p {
    min-height: 10px;
  }

  .faq-answer-{{ section.id }} p:not(:first-child ) {
    margin-top: 10px;
  }

  .faq-height-cal-{{ section.id }} {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    padding-top: {{ answer_padding_top }}px;
  }

  .faq-height-cal-{{ section.id }} * {
    margin: 0px;
    font-size: {{ answer_size_mobile }}px;
    color: {{ answer_color }};
    line-height: {{ answer_height }}%;
    text-transform: unset;
  }

  .faq-height-cal-{{ section.id }} p {
    min-height: 10px;
  }

  .faq-height-cal-{{ section.id }} p:not(:first-child ) {
    margin-top: 10px;
  }

  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
      margin-left: {{ margin_horizontal }}rem;
      margin-right: {{ margin_horizontal }}rem;
    }

    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .faq-body-{{ section.id }} {
      gap: {{ body_gap }}px;
    }

    .faq-item-{{ section.id }} {
      padding: {{ item_padding_vertical }}px {{ item_padding_horizontal }}px;
    }

    .faq-item-{{ section.id }}:not(:first-child) {
      margin-top: {{ item_mt }}px;
    }

    .faq-question-{{ section.id }} {
      font-size: {{ question_size }}px;
    }

    .faq-answer-{{ section.id }} * {
      font-size: {{ answer_size }}px;
    }

    .faq-arrow-{{ section.id }} {
      flex: 0 0 {{ arrow_size }}px;
      height: {{ arrow_size }}px;
    }

    .faq-arrow-{{ section.id }} svg {
      width: {{ arrow_size | times: 0.5 | round: 0 }}px;
      height: {{ arrow_size | times: 0.5 | round: 0 }}px;
    }

    .faq-height-cal-{{ section.id }} * {
      font-size: {{ answer_size }}px;
    }
  }
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}rem;
    }
  </style>
{% endunless %}

{% if question_custom %}
  <style>
    .faq-question-{{ section.id }} {
      font-family: {{ question_font.family }}, {{ question_font.fallback_families }};
      font-weight: {{ question_font.weight }};
      font-style: {{ question_font.style }};
    }
  </style>
{% endif %}

{% if answer_custom %}
  <style>
    .faq-answer-{{ section.id }} * {
      font-family: {{ answer_font.family }}, {{ answer_font.fallback_families }};
      font-weight: {{ answer_font.weight }};
      font-style: {{ answer_font.style }};
    }
  </style>
{% endif %}

{% if faq_position_mobile == 'top' %}
  <style>
    .faq-items-{{ section.id }} {
      order: 1;
    }

    .faq-content-{{ section.id }} {
      order: 2;
    }
  </style>
{% else %}
  <style>
    .faq-items-{{ section.id }} {
      order: 2;
    }

    .faq-content-{{ section.id }} {
      order: 1;
    }
  </style>
{% endif %}

{% if faq_position == 'left' %}
  <style>
    @media(min-width: 1024px) {
      .faq-body-{{ section.id }} {
        grid-template-columns: 1fr 1fr;
      }

      .faq-items-{{ section.id }} {
        order: 1;
      }

      .faq-content-{{ section.id }} {
        order: 2;
      }
    }
  </style>
{% elsif faq_position == 'right' %}
  <style>
    @media(min-width: 1024px) {
      .faq-body-{{ section.id }} {
        grid-template-columns: 1fr 1fr;
      }

      .faq-items-{{ section.id }} {
        order: 2;
      }

      .faq-content-{{ section.id }} {
        order: 1;
      }
    }
  </style>
{% elsif faq_position == 'top' %}
  <style>
    @media(min-width: 1024px) {
      .faq-items-{{ section.id }} {
        order: 1;
      }

      .faq-content-{{ section.id }} {
        order: 2;
      }
    }
  </style>
{% elsif faq_position == 'bottom' %}
  <style>
    @media(min-width: 1024px) {

      .faq-items-{{ section.id }} {
        order: 2;
      }

      .faq-content-{{ section.id }} {
        order: 1;
      }
    }
  </style>
{% endif %}

{% if item_shadow %}
  <style>
    .faq-item-{{ section.id }} {
      box-shadow: rgba(18, 18, 23, 0.08) 0px 6px 4px -1px;
    }
  </style>
{% endif %}

{% for block in section.blocks %}
  {% if block.type == 'heading' %}
    <style>
      {{  block.settings.heading_font | font_face: font_display: 'swap' }}

      .faq-heading-{{ block.id }} {
        text-align: {{ block.settings.heading_align_mobile }};
        margin-top: {{ block.settings.heading_mt_mobile }}px;
      }

      .faq-heading-{{ block.id }} * {
        margin: 0;
        font-size: {{ block.settings.heading_size_mobile }}px;
        color: {{ block.settings.heading_color }};
        line-height: {{ block.settings.heading_height }}%;
        text-transform: unset;
      }

      @media(min-width: 1024px) {

        .faq-heading-{{ block.id }} {
          text-align: {{ block.settings.heading_align }};
          margin-top: {{ block.settings.heading_mt }}px;
        }

        .faq-heading-{{ block.id }} * {
          font-size: {{ block.settings.heading_size }}px;
        }
      }
    </style>

    {% if block.settings.heading_custom %}
      <style>
        .faq-heading-{{ block.id }} {
          font-family: {{ block.settings.heading_font.family }}, {{ block.settings.heading_font.fallback_families }};
          font-weight: {{ block.settings.heading_font.weight }};
          font-style: {{ block.settings.heading_font.style }};
        }
      </style>
    {% endif %}

  {% elsif block.type == 'text' %}
    <style>
      {{  block.settings.text_font | font_face: font_display: 'swap' }}

      .faq-text-{{ block.id }} {
        text-align: {{ block.settings.text_align_mobile }};
        margin-top: {{ block.settings.text_mt_mobile }}px;
      }

      .faq-text-{{ block.id }} * {
        margin: 0;
        font-size: {{ block.settings.text_size_mobile }}px;
        color: {{ block.settings.text_color }};
        line-height: {{ block.settings.text_height }}%;
        text-transform: unset;
      }

      @media(min-width: 1024px) {

        .faq-text-{{ block.id }} {
          text-align: {{ block.settings.text_align }};
          margin-top: {{ block.settings.text_mt }}px;
        }

        .faq-text-{{ block.id }} * {
          font-size: {{ block.settings.text_size }}px;
        }
      }
    </style>

    {% if block.settings.text_custom %}
      <style>
        .faq-text-{{ block.id }} {
          font-family: {{ block.settings.text_font.family }}, {{ block.settings.text_font.fallback_families }};
          font-weight: {{ block.settings.text_font.weight }};
          font-style: {{ block.settings.text_font.style }};
        }
      </style>
    {% endif %}

  {% elsif block.type == 'button' %}
    <style>
      .faq-button-{{ block.id }} {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        width: 100%;
        max-width: {{ block.settings.button_width_mobile }}px;
        margin: 0;
        margin-top: {{ block.settings.button_mt_mobile }}px;
        font-size: {{ block.settings.button_size_mobile }}px;
        color: {{ block.settings.button_color }};
        line-height: {{ block.settings.button_height }}%;
        text-align: center;
        text-transform: unset;
        text-decoration: none;
        padding: {{ block.settings.button_padding_vertical_mobile }}px {{ block.settings.button_padding_horizontal_mobile }}px;
        border-radius: {{ block.settings.button_radius }}px;
        transition: all 0.25s ease 0s;
        position: relative;
        font-weight: 700;
        z-index: 2;
      }

      .faq-button-{{ block.id }}:hover {
        color: {{ block.settings.button_hover_color }};
        transition: all 0.25s ease 0s;
      }

      .faq-button-{{ block.id }} svg {
        width: 14px;
        height: 14px;
      }

      .faq-button-{{ block.id }} svg path {
        fill: {{ block.settings.button_color }};
        transition: all 0.25s ease 0s;
      }

      .faq-button-{{ block.id }}:hover svg path {
        fill: {{ block.settings.button_hover_color }};
        transition: all 0.25s ease 0s;
      }

      @media(min-width: 1024px) {
        .faq-button-{{ block.id }} {
          margin-top: {{ block.settings.button_mt }}px;
          max-width: {{ block.settings.button_width }}px;
          padding: {{ block.settings.button_padding_vertical }}px {{ block.settings.button_padding_horizontal }}px;
          font-size: {{ block.settings.button_size }}px;
        }
      }
    </style>

    {% if block.settings.button_custom %}
      <style>
        .faq-button-{{ block.id }} {
          font-family: {{ block.settings.button_font.family }}, {{ block.settings.button_font.fallback_families }};
          font-weight: {{ block.settings.button_font.weight }};
          font-style: {{ block.settings.button_font.style }};
        }
      </style>
    {% endif %}

    {% if block.settings.button_align_mobile == 'center' %}
      <style>
        .faq-button-{{ block.id }} {
           margin-left: auto;
           margin-right: auto;
         }
      </style>
    {% elsif block.settings.button_align_mobile == 'right' %}
      <style>
        .faq-button-{{ block.id }} {
           margin-left: auto;
         }
      </style>
    {% endif %}

    {% if block.settings.button_align == 'center' %}
      <style>
        @media(min-width: 1024px) {
         .faq-button-{{ block.id }} {
            margin-left: auto !important;
            margin-right: auto !important;
          }
        }
      </style>
    {% elsif block.settings.button_align == 'right' %}
      <style>
        @media(min-width: 1024px) {
         .faq-button-{{ block.id }} {
            margin-left: auto !important;
            margin-right: 0px !important;
          }
        }
      </style>
    {% else %}
      <style>
        @media(min-width: 1024px) {
         .faq-button-{{ block.id }} {
            margin-left: 0px !important;
            margin-right: 0px !important;
          }
        }
      </style>
    {% endif %}

    {% if block.settings.button_style == 'non_outline' or block.settings.button_style == 'non_outline_arrow' %}
      <style>
        .faq-button-{{ block.id }} {
          background-color: {{ block.settings.button_bg_color }};
        }

        .faq-button-{{ block.id }}:hover {
          background-color: {{ block.settings.button_bg_hover_color }};
        }
      </style>
    {% elsif block.settings.button_style == 'outline' or block.settings.button_style == 'outline_arrow' %}
      <style>
        .faq-button-{{ block.id }} {
          background-color: {{ block.settings.button_bg_color }};
          border: {{ block.settings.button_border_thickness }}px solid {{ block.settings.button_border_color }};
        }

        .faq-button-{{ block.id }}:hover {
          background-color: {{ block.settings.button_bg_hover_color }};
          border: {{ block.settings.button_border_thickness }}px solid {{ block.settings.button_border_hover_color }};
        }
      </style>
    {% endif %}
  {% endif %}
{% endfor %}

<div
  class="section-{{ section.id }} faq-{{ section.id }}"
  style="background-color:{{ background_color }}; background-image: {{ background_gradient }};"
>
  <div class="section-{{ section.id }}-settings">
    <div class="faq-body-{{ section.id }}">
      <div class="faq-content-{{ section.id }}">
        {% for block in section.blocks %}
          {% if block.type == 'heading' %}
            <div class="faq-heading-{{ block.id }}">
              {{ block.settings.heading }}
            </div>
          {% endif %}
          {% if block.type == 'text' %}
            <div class="faq-text-{{ block.id }}">
              {{ block.settings.text }}
            </div>
          {% endif %}

          {% if block.type == 'button' %}
            <a href="{{ block.settings.button_url }}" class="faq-button-{{ block.id }}">
              {{ block.settings.button }}
              {% if block.settings.button_style == 'non_outline_arrow'
                or block.settings.button_style == 'outline_arrow'
              %}
                <svg width="192" height="192" viewBox="0 0 192 192" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M187.827 98.7858C188.123 98.4749 188.123 98.4749 188.123 98.1761C188.419 97.8652 188.419 97.5663 188.704 97.5663C189 96.9566 189 96.6458 189 96.0361C189 95.4263 189 94.8166 188.704 94.5058C188.704 94.195 188.408 93.8961 188.123 93.5852C188.123 93.2744 187.827 93.2744 187.827 92.9755L103.287 4.21945C102.41 3.29889 101.533 3 100.668 3C99.791 3 98.6295 3.31083 98.0488 4.21945C97.1719 5.14 96.8872 6.06058 96.8872 6.96919C96.8872 7.88974 97.1833 9.10918 98.0488 9.7189L175.587 92.0539H6.79206C4.75371 92.0539 3 93.895 3 96.0351C3 98.1751 4.75365 100.016 6.79206 100.016H175.575L97.7543 182.042C96.2967 183.572 96.2967 186.322 97.7543 187.852C99.2119 189.383 101.831 189.383 103.288 187.852L187.827 98.7858Z" fill="black"></path>
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M188.607 97.5657C188.432 97.5657 188.365 97.6788 188.27 97.8382C188.211 97.9378 188.141 98.0554 188.027 98.1748C188.027 98.4734 188.027 98.4734 187.731 98.7839L103.281 187.759C101.825 189.287 99.2085 189.287 97.7524 187.759C96.2963 186.23 96.2963 183.483 97.7524 181.954L175.492 100.013L6.88489 100.013C4.8486 100.013 3.09677 98.1739 3.09677 96.036C3.09677 93.8982 4.84866 92.059 6.88489 92.059L175.504 92.059L98.0465 9.80878C97.182 9.19968 96.8862 7.9815 96.8862 7.0619C96.8862 6.15422 97.1706 5.2346 98.0465 4.315C98.6267 3.40732 99.787 3.0968 100.663 3.0968C101.527 3.0968 102.403 3.39539 103.279 4.315L187.731 92.9796C187.731 93.1274 187.804 93.2021 187.877 93.2774C187.952 93.3543 188.027 93.4319 188.027 93.5887C188.046 93.6098 188.066 93.6308 188.085 93.6518C188.338 93.9267 188.584 94.1935 188.606 94.4689C188.607 94.482 188.607 94.4951 188.607 94.5083C188.903 94.8188 188.903 95.4279 188.903 96.037C188.903 96.6461 188.903 96.9566 188.607 97.5657ZM191.489 93.2767C191.79 93.8661 191.89 94.4204 191.934 94.7363C192.001 95.2226 192 95.7194 192 95.9856L192 96.037C192 96.0544 192 96.0729 192 96.0926C192 96.3523 192.001 96.8096 191.924 97.2931C191.828 97.8884 191.64 98.41 191.393 98.9184L190.546 100.663H190.212C190.127 100.759 190.038 100.852 189.988 100.905L189.974 100.92L105.527 189.891C102.85 192.701 98.1865 192.704 95.51 189.895C94.1476 188.464 93.5636 186.587 93.5636 184.857C93.5636 183.128 94.1468 181.252 95.5071 179.822M191.489 93.2767C191.316 92.7908 191.078 92.4357 190.938 92.2406C190.903 92.1912 190.866 92.142 190.828 92.0939V91.7408L105.522 2.17912C104.076 0.661813 102.397 0 100.663 0C99.3914 0 97.0569 0.401401 95.6212 2.37737C94.3151 3.83819 93.7895 5.45521 93.7895 7.0619C93.7895 8.26663 94.1183 10.6061 95.9608 12.111L168.333 88.9622L6.88489 88.9622C2.9981 88.9622 0 92.3316 0 96.036C0 99.7405 2.99801 103.11 6.88489 103.11L168.285 103.11" fill="black"></path>
                  <path d="M169.5 104L16.5 102.5V90H171L97.5 10.5V7L107.5 4.5C131.167 29.6667 180.2 81.5 187 87.5C193.8 93.5 191.5 99 189.5 101L105.5 184L94 181.5L169.5 104Z" fill="black"></path>
                </svg>
              {% endif %}
            </a>
          {% endif %}
        {% endfor %}
      </div>
      <div class="faq-items-{{ section.id }}">
        {% for block in section.blocks %}
          {% if block.type == 'item' %}
            <div class="faq-item-{{ section.id }}">
              <div class="faq-toggle-{{ section.id }}">
                <p class="faq-question-{{ section.id }}">{{ block.settings.question }}</p>
                <div class="faq-arrow-{{ section.id }}">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    version="1.0"
                    viewBox="0 0 143.000000 83.000000"
                    preserveAspectRatio="xMidYMid meet"
                  >
                    <g transform="translate(0.000000,83.000000) scale(0.100000,-0.100000)" fill="" stroke="none">
                    <path d="M57 772 l-57 -57 360 -360 360 -360 357 357 358 358 -63 62 -62 63 -298 -298 -297 -297 -295 295 c-162 162 -297 295 -300 295 -3 0 -31 -26 -63 -58z"></path>
                    </g>
                  </svg>
                </div>
              </div>
              <div
                class="faq-answer-{{ section.id }}"
                style="display: none; height: 0px; padding-top: 0px; padding-bottom: 0px;"
              >
                {{ block.settings.answer }}
              </div>
              <div class="faq-height-cal-{{ section.id }}">
                {{ block.settings.answer }}
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<script>
  function initFAQ9() {
    
    const answerPaddingTop = {{ answer_padding_top }};
    const answerPaddingBottom = 0;

    const faqs = document.querySelectorAll(
      '.faq-item-{{ section.id }}'
    );
    const buttons = document.querySelectorAll(
      '.faq-toggle-{{ section.id }}'
    );
    const answers = document.querySelectorAll(
      '.faq-answer-{{ section.id }}'
    );
    const answersHeightCalElements = document.querySelectorAll(
      '.faq-height-cal-{{ section.id }}'
    );
    const icons = document.querySelectorAll(
      '.faq-arrow-{{ section.id }}'
    );

    let activeIndex = -1;

    function openAnswer(index) {
      const height = answersHeightCalElements[index].offsetHeight;

      answers[index].style.display = 'block';
      setTimeout(() => {
        answers[index].style.paddingTop = `${answerPaddingTop}px`;
        answers[index].style.paddingBottom = `${answerPaddingBottom}px`;
        answers[index].style.height = 'max-content';
        icons[index].style.setProperty('--rotate', '180deg');
      });
    }
    function closeAnswer(index) {
      answers[index].style.paddingTop = 0;
      answers[index].style.paddingBottom = 0;
      answers[index].style.height = 0;
      icons[index].style.setProperty('--rotate', '0deg');

      setTimeout(() => {
        answers[index].style.display = 'none';
      }, 300);
    }
    function toggleAnswer(index) {
      if (answers[index].style.display === 'none') {
        openAnswer(index);
        activeIndex = index;
      } else {
        closeAnswer(index);
        activeIndex = -1;
      }
    }
    function closeAllAnswerBut(index) {
      answers.forEach((answer, i) => {
        if (i !== index) {
          closeAnswer(i);
        }
      });
    }

    // When clicked, toggle the answer, animate the answer's height:
    buttons.forEach((button, index) => {
      button.addEventListener('click', () => {
        toggleAnswer(index);
        // closeAllAnswerBut(index);
      });
    });

    // When the window is resized, debounce the answer's height:
    let resizeTimer;
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(() => {
        if (activeIndex !== -1) {
          const height = answersHeightCalElements[activeIndex].offsetHeight;
          answers[activeIndex].style.height = `max-content`;
        }
      }, 250);
    });
  }

  document.addEventListener('DOMContentLoaded', initFAQ9);
  
  if (Shopify.designMode) {
     document.addEventListener('shopify:section:unload', initFAQ9);
     document.addEventListener('shopify:section:load', initFAQ9);
  }
</script>

{% schema %}
{
  "name": "SS - FAQ #9",
  "settings": [
    {
      "type": "header",
      "content": "Body Settings"
    },
    {
      "type": "range",
      "id": "body_gap",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Body Gap",
      "default": 30
    },
    {
      "type": "range",
      "id": "body_gap_mobile",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Body Gap - Mobile",
      "default": 20
    },
    {
      "type": "range",
      "id": "body_radius",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Body Roundness",
      "default": 40
    },
    {
      "type": "header",
      "content": "FAQ Settings"
    },
    {
      "type": "select",
      "id": "faq_position",
      "label": "FAQ Position - Desktop",
      "default": "right",
      "options": [
        {
          "label": "Left",
          "value": "left"
        },
        {
          "label": "Right",
          "value": "right"
        },
        {
          "label": "Top",
          "value": "top"
        },
        {
          "label": "Bottom",
          "value": "bottom"
        }
      ]
    },
    {
      "type": "select",
      "id": "faq_position_mobile",
      "label": "FAQ Position - Mobile",
      "default": "top",
      "options": [
        {
          "label": "Top",
          "value": "top"
        },
        {
          "label": "Bottom",
          "value": "bottom"
        }
      ]
    },
    {
      "type": "header",
      "content": "FAQ Item Settings"
    },
    {
      "type": "range",
      "id": "item_padding_vertical",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Item Padding Vertical",
      "default": 20
    },
    {
      "type": "range",
      "id": "item_padding_vertical_mobile",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Item Padding Vertical - Mobile",
      "default": 20
    },
    {
       "type": "range",
       "id": "item_padding_horizontal",
       "min": 0,
       "max": 50,
       "step": 2,
       "unit": "px",
       "label": "Item Padding Horizontal",
       "default": 20
    },
    {
       "type": "range",
       "id": "item_padding_horizontal_mobile",
       "min": 0,
       "max": 50,
       "step": 2,
       "unit": "px",
       "label": "Item Padding Horizontal - Mobile",
       "default": 20
    },
    {
       "type": "range",
       "id": "item_mt",
       "min": 0,
       "max": 50,
       "step": 2,
       "unit": "px",
       "label": "Item Margin Top",
       "default": 10
    },
    {
       "type": "range",
       "id": "item_radius",
       "min": 0,
       "max": 50,
       "step": 2,
       "unit": "px",
       "label": "Item Border Radius",
       "default": 10
    },
    {
       "type": "range",
       "id": "item_border_thickness",
       "min": 0,
       "max": 10,
       "step": 1,
       "unit": "px",
       "label": "Item Border Thickness",
       "default": 0
    },
    {
      "type": "checkbox",
      "id": "item_shadow",
      "label": "Item Box Shadow",
      "default": true
    },
    {
      "type": "header",
      "content": "Question Settings"
    },
    {
      "type": "checkbox",
      "id": "question_custom",
      "label": "Use Custom Font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "question_font",
      "label": "Question Font Family",
      "default": "josefin_sans_n4"
    },
    {
      "type": "range",
      "id": "question_size",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Question Size",
      "default": 18
    },
    {
      "type": "range",
      "id": "question_size_mobile",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Question Size - Mobile",
      "default": 14
    },
    {
      "type": "range",
      "id": "question_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Question Line Height",
      "default": 130
    },
    {
      "type": "header",
      "content": "Arrow Settings"
    },
    {
      "type": "range",
      "id": "arrow_size",
      "min": 10,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Arrow Size",
      "default": 24
    },
    {
      "type": "range",
      "id": "arrow_size_mobile",
      "min": 10,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Arrow Size - Mobile",
      "default": 24
    },
    {
      "type": "range",
      "id": "arrow_border_thickness",
      "min": 0,
      "max": 5,
      "step": 1,
      "unit": "px",
      "label": "Arrow Border Thickness",
      "default": 0
    },
    {
      "type": "header",
      "content": "Answer Settings"
    },
    {
      "type": "checkbox",
      "id": "answer_custom",
      "label": "Use Custom Font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "answer_font",
      "label": "Answer Font Family",
      "default": "josefin_sans_n4"
    },
    {
      "type": "range",
      "id": "answer_size",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Answer Size",
      "default": 16
    },
    {
      "type": "range",
      "id": "answer_size_mobile",
      "min": 0,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Answer Size - Mobile",
      "default": 12
    },
    {
      "type": "range",
      "id": "answer_height",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "%",
      "label": "Answer Line Height",
      "default": 170
    },
    {
      "type": "range",
      "id": "answer_padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Answer Padding Top",
      "default": 16
    },
    {
      "type": "header",
      "content": "FAQ Item Colors"
    },
    {
      "type": "color",
      "label": "Item Background Color",
      "id": "item_bg_color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "label": "Item Border Color",
      "id": "item_border_color",
      "default": "#000000"
    },
    {
      "type": "color",
      "label": "Question Color",
      "id": "question_color",
      "default": "#005C53"
    },
    {
      "type": "color",
      "label": "Arrow Color",
      "id": "arrow_color",
      "default": "#757575"
    },
    {
      "type": "color",
      "label": "Arrow Border Color",
      "id": "arrow_border_color",
      "default": "#6c584c"
    },
    {
      "type": "color",
      "label": "Answer Color",
      "id": "answer_color",
      "default": "#757575"
    },
    {
      "type": "header",
      "content": "Section Colors"
    },
    {
      "type": "color",
      "label": "Section background",
      "id": "background_color",
      "default": "#F0F3F4"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Section background gradient"
    },
    {
      "type": "color",
      "label": "Border",
      "id": "border_color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Section margin (outside)"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin top",
      "default": 16
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Margin bottom",
      "default": 16
    },
    {
      "type": "range",
      "id": "margin_horizontal",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "rem",
      "label": "Margin sides",
      "default": 4
    },
    {
      "type": "range",
      "id": "margin_horizontal_mobile",
      "min": 0,
      "max": 15,
      "step": 0.5,
      "unit": "rem",
      "label": "Margin sides mobile",
      "default": 1.5
    },
    {
      "type": "header",
      "content": "Section padding (inside)"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding top",
      "default": 60
    },
    {
       "type": "range",
       "id": "padding_bottom",
       "min": 0,
       "max": 100,
       "step": 4,
       "unit": "px",
       "label": "Padding bottom",
       "default": 60
    },
    {
      "type": "range",
      "id": "padding_horizontal",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "rem",
      "label": "Padding sides",
      "default": 6
    },
    {
      "type": "range",
      "id": "padding_horizontal_mobile",
      "min": 0,
      "max": 15,
      "step": 0.5,
      "unit": "rem",
      "label": "Padding sides mobile",
      "default": 1.5
    },
    {
      "type": "header",
      "content": "Section Settings"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full Width",
      "default": true
    },
    {
      "type": "range",
      "id": "content_width",
      "min": 0,
      "max": 400,
      "step": 10,
      "unit": "rem",
      "label": "Section content width",
      "default": 120
    },
    {
      "type": "range",
      "id": "border_thickness",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Border thickness",
      "default": 0
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "Heading",
      "settings": [
        {
          "type": "richtext",
          "id": "heading",
          "label": "Heading",
          "default": "<h2>Have Questions?<br>We Have Answers.</h2>"
        },
        {
          "type": "checkbox",
          "id": "heading_custom",
          "label": "Use Custom Font",
          "default": false
        },
        {
          "type": "font_picker",
          "id": "heading_font",
          "label": "Heading Font Family",
          "default": "josefin_sans_n4"
        },
        {
          "type": "range",
          "id": "heading_size",
          "min": 0,
          "max": 72,
          "step": 2,
          "unit": "px",
          "label": "Heading Size",
          "default": 48
        },
        {
          "type": "range",
          "id": "heading_size_mobile",
          "min": 0,
          "max": 72,
          "step": 2,
          "unit": "px",
          "label": "Heading Size - Mobile",
          "default": 30
        },
        {
          "type": "range",
          "id": "heading_height",
          "min": 50,
          "max": 200,
          "step": 10,
          "unit": "%",
          "label": "Heading Line Height",
          "default": 130
        },
        {
          "type": "range",
          "id": "heading_mt",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Heading Margin Top",
          "default": 0
        },
        {
          "type": "range",
          "id": "heading_mt_mobile",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Heading Margin Top - Mobile",
          "default": 0
        },
        {
          "type": "text_alignment",
          "id": "heading_align",
          "label": "Heading Align"
        },
        {
          "type": "text_alignment",
          "id": "heading_align_mobile",
          "label": "Heading Align - Mobile",
          "default":"center"
        },
        {
          "type": "color",
          "id": "heading_color",
          "label": "Heading Color",
          "default": "#005C53"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Get quick solutions to your common lawn care concerns, from mowing to pest control. </p>"
        },
        {
          "type": "checkbox",
          "id": "text_custom",
          "label": "Use Custom Font",
          "default": false
        },
        {
          "type": "font_picker",
          "id": "text_font",
          "label": "Text Font Family",
          "default": "josefin_sans_n4"
        },
        {
          "type": "range",
          "id": "text_size",
          "min": 0,
          "max": 72,
          "step": 2,
          "unit": "px",
          "label": "Text Size",
          "default": 18
        },
        {
          "type": "range",
          "id": "text_size_mobile",
          "min": 0,
          "max": 72,
          "step": 2,
          "unit": "px",
          "label": "Text Size - Mobile",
          "default": 16
        },
        {
          "type": "range",
          "id": "text_height",
          "min": 50,
          "max": 200,
          "step": 10,
          "unit": "%",
          "label": "Text Line Height",
          "default": 130
        },
        {
          "type": "range",
          "id": "text_mt",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Text Margin Top",
          "default": 20
        },
        {
          "type": "range",
          "id": "text_mt_mobile",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Text Margin Top - Mobile",
          "default": 20
        },
        {
          "type": "text_alignment",
          "id": "text_align",
          "label": "Text Align"
        },
        {
          "type": "text_alignment",
          "id": "text_align_mobile",
          "label": "Text Align - Mobile",
          "default":"center"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text Color",
          "default": "#757575"
        }
      ]
    },
    {
      "type": "button",
      "name": "Button",
      "settings": [
        {
          "type": "header",
          "content": "Button"
        },
        {
          "type": "text",
          "id": "button",
          "label": "Button Text",
          "default":"Get it now"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "Button URL"
        },
        {
          "type": "checkbox",
          "id": "button_custom",
          "label": "Use Custom Font",
          "default": false
        },
        {
          "type": "font_picker",
          "id": "button_font",
          "label": "Button Font Family",
          "default": "josefin_sans_n4"
        },
        {
          "type": "range",
          "id": "button_size",
          "min": 0,
          "max": 30,
          "step": 1,
          "unit": "px",
          "label": "Button Size",
          "default": 16
        },
        {
          "type": "range",
          "id": "button_size_mobile",
          "min": 0,
          "max": 30,
          "step": 1,
          "unit": "px",
          "label": "Button Size - Mobile",
          "default": 14
        },
        {
          "type": "range",
          "id": "button_height",
          "min": 50,
          "max": 200,
          "step": 10,
          "unit": "%",
          "label": "Button Line Height",
          "default": 100
        },
        {
          "type": "range",
          "id": "button_width",
          "min": 200,
          "max": 700,
          "step": 5,
          "unit": "px",
          "label": "Button Max-Width - Desktop",
          "default": 200
        },
        {
          "type": "range",
          "id": "button_width_mobile",
          "min": 200,
          "max": 700,
          "step": 5,
          "unit": "px",
          "label": "Button Max-Width - Mobile",
          "default": 200
        },
        {
          "type": "range",
          "id": "button_mt",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Button Margin Top",
          "default": 16
        },
        {
          "type": "range",
          "id": "button_mt_mobile",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Button Margin Top - Mobile",
          "default": 16
        },
        {
          "type": "range",
          "id": "button_padding_vertical",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Button Padding Vertical",
          "default": 16
        },
        {
          "type": "range",
          "id": "button_padding_vertical_mobile",
          "min": 0,
          "max": 100,
          "step": 2,
          "unit": "px",
          "label": "Button Padding Vertical - Mobile",
          "default": 12
        },
        {
           "type": "range",
           "id": "button_padding_horizontal",
           "min": 0,
           "max": 100,
           "step": 2,
           "unit": "px",
           "label": "Button Padding Horizontal",
           "default": 24
        },
        {
           "type": "range",
           "id": "button_padding_horizontal_mobile",
           "min": 0,
           "max": 100,
           "step": 2,
           "unit": "px",
           "label": "Button Padding Horizontal - Mobile",
           "default": 24
        },
        {
           "type": "range",
           "id": "button_radius",
           "min": 0,
           "max": 100,
           "step": 2,
           "unit": "px",
           "label": "Button Border Radius",
           "default": 4
        },
        {
           "type": "range",
           "id": "button_border_thickness",
           "min": 0,
           "max": 10,
           "step": 1,
           "unit": "px",
           "label": "Button Border Thickness",
           "default": 1
        },
        {
          "type": "select",
          "id": "button_align",
          "label": "Button Align",
          "default": "left",
          "options": [
            {
              "label": "Left",
              "value": "left"
            },
            {
              "label": "Center",
              "value": "center"
            },
            {
              "label": "Right",
              "value": "right"
            }
          ]
        },
        {
          "type": "select",
          "id": "button_align_mobile",
          "label": "Button Align - Mobile",
          "default": "center",
          "options": [
            {
              "label": "Left",
              "value": "left"
            },
            {
              "label": "Center",
              "value": "center"
            },
            {
              "label": "Right",
              "value": "right"
            }
          ]
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button Style",
          "default": "non_outline",
          "options": [
            {
              "label": "Link",
              "value": "link"
            },
            {
              "label": "Non-Outline",
              "value": "non_outline"
            },
            {
              "label": "Non-Outline & Arrow",
              "value": "non_outline_arrow"
            },
            {
              "label": "Outline",
              "value": "outline"
            },
            {
              "label": "Outline & Arrow",
              "value": "outline_arrow"
            }
          ]
        },
        {
          "type": "header",
          "content": "Button Colors"
        },
        {
          "type": "color",
          "label": "Button Text Color",
          "id": "button_color",
          "default": "#FFFFFF"
        },
        {
          "type": "color",
          "label": "Button Hover Text Color",
          "id": "button_hover_color",
          "default": "#FFFFFF"
        },
        {
          "type": "color",
          "label": "Button Background Color",
          "id": "button_bg_color",
          "default": "#000000"
        },
        {
          "type": "color",
          "label": "Button Background Hover Color",
          "id": "button_bg_hover_color",
          "default": "#000000"
        },
        {
          "type": "color",
          "label": "Button Border Color",
          "id": "button_border_color",
          "default": "#000000"
        },
        {
          "type": "color",
          "label": "Button Border Hover Color",
          "id": "button_border_hover_color",
          "default": "#000000"
        }
      ]
    },
    {
      "type": "item",
      "name": "FAQ Item",
      "settings": [
        {
          "type": "text",
          "id": "question",
          "label": "Question",
          "default": "Lorem ipsum dolor sit amet?"
        },
        {
          "type": "richtext",
          "id": "answer",
          "label": "Answer",
          "default": "<p>Consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Si habetis ulteriores quaestiones, quaeso, nostri auxilium clientibus contact.</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "SS - FAQ #9",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        },
        {
          "type": "item"
        }
      ]
    }
  ]
}
{% endschema %}
